name: Maven Package with Auto Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # Para crear releases y tags
      packages: write    # Para publicar en GitHub Packages
      id-token: write    # Para autenticaci√≥n

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para trabajar con tags

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Get Maven Version
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Detected version: $VERSION"

      - name: Create settings.xml
        run: |
          cat > settings.xml << EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                        http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.PKG_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Build and Deploy to GitHub Packages
        run: mvn -B clean deploy --settings settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.PKG_TOKEN }}

      - name: Create Git Tag
        id: tag
        run: |
          # Crear tag
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release version ${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.version.outputs.version }}"
          name: "Release v${{ steps.version.outputs.version }}"
          body: |
            Automated release from GitHub Actions
            
            **Version:** ${{ steps.version.outputs.version }}
            **Commit:** ${{ github.sha }}
            **Build Date:** $(date +'%Y-%m-%d %H:%M:%S')
            
            Changes:
            - Auto-generated release
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify deployment
        run: |
          echo "‚úÖ Deployment completed successfully!"
          echo "üì¶ Package: https://github.com/${{ github.repository }}/packages"
          echo "üè∑Ô∏è  Release: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.version }}"